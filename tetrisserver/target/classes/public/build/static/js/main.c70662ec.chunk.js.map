{"version":3,"sources":["johnny_fever/johnnyFever.ttf","UI/UiBlock.tsx","UI/UiRow.tsx","Block.ts","CurrentPiece.ts","Row.ts","Board.tsx","UI/Form.tsx","UI/Score.tsx","App.tsx","serviceWorker.ts","store/index.js","store/emptyBoard.ts","index.tsx"],"names":["module","exports","Block","props","key","style","value","color","gameOver","height","width","display","margin","border","borderColor","background","position","opacity","getStyle","className","isInFullRow","index","Row","rowId","blocks","row","map","UiBlock","isFull","padding","columnId","blockToLeft","blockToRight","blockBelow","isEqualTo","block","this","CurrentPiece","board","currentPosition","lockCurrentPosition","nextPosition","axis","newPiece","getNextPosition","nextPiece","generate","forEach","newPosition","newColumnId","newRowId","isValidPosition","setNextPosition","direction","proposedPosition","currentPositionString","JSON","stringify","difference","filter","includes","length","error","shapes","Math","floor","random","Board","boardArray","rows","nextBoard","getFullRows","fullRows","push","removeFullRows","console","log","Form","state","name","commonStyle","backgroundColor","borderRadius","fontFamily","fontSize","maxWidth","buttonStyle","cursor","marginTop","inputStyle","textAlign","handleChange","e","setState","target","submit","body","score","fetch","method","redirect","then","res","window","location","href","type","onChange","maxLength","onClick","React","Component","Score","variableText","gameStarted","bottom","scoreBoard","highScores","box","lineHeight","marginLeft","marginBottom","startGame","App","useSelector","currentPiece","gravityActive","dispatch","useDispatch","undefined","json","scores","boardCopy","pauseForAnimation","Boolean","valueOf","nextScore","pow","removeFromBoard","addToBoard","setTimeout","trackPiece","addNextToBoard","currentPiecePosition","document","addEventListener","handler","move","removeEventListener","rotate","setInterval","event","KeyboardEvent","dispatchEvent","paddingTop","justifyContent","flexDirection","alignItems","UiRow","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","initialState","store","createStore","action","Object","assign","ReactDOM","render","getElementById","URL","process","origin","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,yC,kGC4F5BC,EAhFqB,SAACC,GAAW,IACpCC,EAAeD,EAAfC,IAqEFC,EAjDW,SAACC,GAEd,IAAIC,EAMJ,OAFGJ,EAAMK,WAAUF,EAAQ,KAEnBA,GACJ,IAAK,IAAKC,EAAQ,UAAW,MAC7B,IAAK,IAAKA,EAAQ,cAAe,MACjC,IAAK,IAAKA,EAAQ,YAAa,MAC/B,IAAK,IAAKA,EAAQ,OAAQ,MAC1B,IAAK,IAAKA,EAAQ,YAAa,MAC/B,IAAK,KAAMA,EAAQ,MAAO,MAC1B,IAAK,IAAKA,EAAQ,OAAQ,MAC1B,IAAK,IAAKA,EAAQ,WAAY,MAC9B,QAASA,EAAQ,OAerB,MAAO,CACHE,OAAQ,OACRC,MAAO,OACPC,QAAS,eACTC,OAAQ,UACRC,OAAQ,kCAGRC,YAAuB,MAAVR,EAAgB,uBAAyB,UAGtDS,WAAYR,EACZS,SAAU,WACVC,QAAS,MAIYC,CArENf,EAAVG,OAuEb,OAAO,yBACHD,MAAOA,EACPD,IAAKA,EACLe,UAAWhB,EAAMiB,aAAejB,EAAMK,SAA3B,WAA0C,GAAKL,EAAMkB,MAArD,aAAwE,MCzD5EC,EAnBiB,SAACnB,GAE7B,IAAMoB,EAAgBpB,EAAMoB,MACtBC,EAAwBrB,EAAMsB,IAAIC,KAAI,SAACpB,EAAOe,GAAR,OACxC,kBAACM,EAAD,CACIvB,IAAK,GAAKiB,EAAQE,EAClBjB,MAAOA,EACPc,YAAajB,EAAMyB,OACnBP,MAAOA,EACPb,SAAUL,EAAMK,cAIxB,OAAO,yBACHJ,IAAKmB,EACLlB,MAAO,CAACwB,QAAS,IACfL,I,cCWKtB,EAvBX,WAAYI,EAAeiB,EAAeO,GAAkB,IAAD,gCAJ3DxB,WAI2D,OAH3DiB,WAG2D,OAF3DO,cAE2D,OAM3DC,YAAc,WACV,OAAO,IAAI7B,EAAM,EAAKI,MAAO,EAAKiB,MAAO,EAAKO,SAAW,IAPF,KAU3DE,aAAe,WACX,OAAO,IAAI9B,EAAM,EAAKI,MAAO,EAAKiB,MAAO,EAAKO,SAAW,IAXF,KAc3DG,WAAa,WACT,OAAO,IAAI/B,EAAM,EAAKI,MAAO,EAAKiB,MAAQ,EAAG,EAAKO,WAfK,KAkB3DI,UAAY,SAACC,GACT,OAAOA,EAAMZ,QAAU,EAAKA,OAASY,EAAML,WAAa,EAAKA,UAlB7DM,KAAKN,SAAWA,EAChBM,KAAKb,MAAQA,EACba,KAAK9B,MAAQA,GCqLN+B,E,WA3LX,WAAYC,EAAmBtB,GAAsC,IAAD,OAGhE,GAHgE,yBAPpEuB,qBAOoE,OANpEC,qBAA+B,EAMqC,KALpEC,kBAKoE,OAJpEH,WAIoE,OAHpEI,UAGoE,OAFpEC,UAAoB,EAEgD,KA6GpEC,gBAAkB,WACd,OAAO,EAAKH,cA7GZL,KAAKE,MAAQA,EAEVtB,EACCoB,KAAKG,gBAAkBvB,EACvBoB,KAAKK,aAAezB,EACpBoB,KAAKM,KAAO1B,EAAS,OAClB,CACH,IAAM6B,EAA2BT,KAAKU,WACtCV,KAAKG,gBAAkBM,EACvBT,KAAKK,aAAeI,EACpBT,KAAKM,KAAOG,EAAU,I,4DAIdP,GAIZ,OAHAF,KAAKG,gBAAgBQ,SAAQ,SAACZ,GAC1BG,EAAMH,EAAMZ,OAAOY,EAAML,UAAY,OAElCQ,I,iCAGAA,GAIP,OAHAF,KAAKG,gBAAgBQ,SAAQ,SAACZ,GAC1BG,EAAMH,EAAMZ,OAAOY,EAAML,UAAYK,EAAM7B,SAExCgC,I,qCAGIA,GAIX,OAHAF,KAAKK,aAAaM,SAAQ,SAACZ,GACvBG,EAAMH,EAAMZ,OAAOY,EAAML,UAAYK,EAAM7B,SAExCgC,I,+BAGQ,IAAD,OAERU,EAA6BZ,KAAKG,gBAAgBb,KAAI,SAACS,EAAcd,GACvE,IAAM4B,GAAkD,GAAlC,EAAKP,KAAKnB,MAAQY,EAAMZ,OAAe,EAAKmB,KAAKZ,SACjEoB,EAAY,EAAKR,KAAKZ,SAAWK,EAAML,SAAY,EAAKY,KAAKnB,MAEnE,OAAO,IAAIrB,EACPiC,EAAM7B,MACN4C,EACAD,MAIR,QAAIb,KAAKe,gBAAgBH,KACrBZ,KAAKgB,gBAAgBJ,IACd,K,2BAKVK,GACD,IAAMC,EAAmBlB,KAAKG,gBAAgBb,KAAI,SAACS,GAC/C,OAAQkB,GACJ,IAAK,YACD,OAAOlB,EAAMJ,cACjB,IAAK,aACD,OAAOI,EAAMH,eACjB,IAAK,YACD,OAAOG,EAAMF,aACjB,QACI,OAAOE,MAInB,OAAIC,KAAKe,gBAAgBG,IACrBlB,KAAKgB,gBAAgBE,IACd,GAEc,cAAdD,IACPjB,KAAKgB,gBAAgBhB,KAAKU,YAC1BV,KAAKI,qBAAsB,GACpB,K,sCAKCc,GACZ,IAAMC,EAAkCnB,KAAKG,gBAAgBb,KAAI,SAACS,GAC9D,OAAOqB,KAAKC,UAAUtB,MAGpBuB,EAAsBJ,EAAiBK,QAAO,SAACxB,GACjD,OAAQoB,EAAsBK,SAASJ,KAAKC,UAAUtB,OANJ,uBAStD,YAAkBuB,EAAlB,+CAA8B,CAAC,IAAtBvB,EAAqB,QAC1B,GAAIA,EAAMZ,QAAUa,KAAKE,MAAMuB,OAC3B,OAAO,EACX,IACI,GAAgD,MAA5CzB,KAAKE,MAAMH,EAAMZ,OAAOY,EAAML,UAC9B,OAAO,EAEb,MAAOgC,GACL,OAAO,IAjBuC,kFAoBtD,OAAO,I,sCAGarB,GACpBL,KAAKK,aAAeA,I,iCAQpB,IAAIjB,EACEuC,EAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE9C,OADcA,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOF,UAEnD,IAAK,IACDrC,EAAS,CACL,IAAItB,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,IAEtB,MACJ,IAAK,IACDsB,EAAS,CACL,IAAItB,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,IAEtB,MACJ,IAAK,IACDsB,EAAS,CACL,IAAItB,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,IAEtB,MACJ,IAAK,IACDsB,EAAS,CACL,IAAItB,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,IAEtB,MACJ,IAAK,IACDsB,EAAS,CACL,IAAItB,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,IAEtB,MACJ,IAAK,IACDsB,EAAS,CACL,IAAItB,EAAM,KAAM,EAAG,GACnB,IAAIA,EAAM,KAAM,EAAG,GACnB,IAAIA,EAAM,KAAM,EAAG,GACnB,IAAIA,EAAM,KAAM,EAAG,IAEvB,MACJ,IAAK,IACDsB,EAAS,CACL,IAAItB,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,IAEtB,MACJ,QAASsB,EAAS,CACd,IAAItB,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,GAClB,IAAIA,EAAM,IAAK,EAAG,IAI1B,OADAkC,KAAKO,UAAW,EACTnB,M,KCjLAF,EATX,WAAYC,EAAeC,GAAkB,yBAJ7CD,WAI4C,OAH5CC,YAG4C,OAF5CI,YAE4C,EACxCQ,KAAKb,MAAQA,EACba,KAAKZ,OAASA,EAAOE,KAAI,SAACpB,EAAOe,GAC7B,OAAO,IAAInB,EAAMI,EAAOiB,EAAOF,MAEnCe,KAAKR,QAAUJ,EAAOoC,SAAS,MC+BxBO,EArCX,WAAYC,GAAwB,IAAD,gCAJ3BC,UAI2B,OAH3BD,gBAG2B,OAF3BE,eAE2B,OAQnCC,YAAc,WACV,IAAIC,EAAqB,GAIzB,OAHA,EAAKH,KAAKtB,SAAQ,SAACtB,EAAUJ,GACrBI,EAAIG,QAAQ4C,EAASC,KAAKpD,MAE3BmD,GAbwB,KAgBnCE,eAAiB,SAACF,GAgBd,OAXAG,QAAQC,IAAI,oBACZJ,EAASzB,SAAQ,SAAC1B,GACd,KAAMA,GAAS,GACJ,EAAKiD,UAAUjD,EAAQ,GACtB,EAAKiD,UAAUjD,GAAS,EAAKiD,UAAUjD,EAAQ,GAE/C,EAAKiD,UAAUjD,GAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE1EA,OAGL,EAAKiD,WA/BZlC,KAAKgC,WAAaA,EAClBhC,KAAKkC,UAAYF,EACjBhC,KAAKiC,KAAOD,EAAW1C,KAAI,SAACD,EAAeJ,GACvC,OAAO,IAAIC,EAAID,EAAOI,O,4lBC2DnBoD,E,2MA/DXC,MAAS,CACLC,KAAM,I,EAEVC,YAA6B,CACzBrE,QAAS,QACTsE,gBAAiB,cACjB1E,MAAO,QACPM,OAAQ,kBACRqE,aAAc,OACdC,WAAY,cACZvE,OAAQ,OACRwE,SAAU,OACVC,SAAU,O,EAIdC,Y,KACO,EAAKN,Y,CACRO,OAAQ,UACRC,UAAW,S,EAGfC,W,KACO,EAAKT,Y,CACRU,UAAW,W,EAGfC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVd,KAAMa,EAAEE,OAAOxF,S,EAGvByF,OAAS,WACL,GAA8B,IAA3B,EAAKjB,MAAMC,KAAKlB,OAAa,CAC5B,IAAMmC,EAAOxC,KAAKC,UAAU,CAACsB,KAAM,EAAKD,MAAMC,KAAMkB,MAAO,EAAK9F,MAAM8F,QACtEC,MAAM,aAAc,CAChBC,OAAQ,OACRC,SAAU,SACVJ,KAAMA,IAETK,MAAK,SAAAC,GAAG,OAAIC,OAAOC,SAASC,KAAO,kB,wEAInC,IAAD,OACJ,OAAO,6BACH,8CACA,2BACIpG,MAAS+B,KAAKqD,WACdiB,KAAK,OACLC,SAAU,SAACf,GAAD,OAA4C,EAAKD,aAAaC,IACxEtF,MAAO8B,KAAK0C,MAAMC,KAClB6B,UAAW,IACf,4BACIC,QAAWzE,KAAK2D,OAChB1F,MAAS+B,KAAKkD,aAFlB,e,GAtDOwB,IAAMC,W,+jBCOzB,IAyEeC,EAzEqB,SAAC7G,GAGjC,IAAI8G,EAIAA,EAHC9G,EAAM+G,YAEA/G,EAAMK,SACE,YAEA,6BAJA,sBAOnB,IAOI2G,EAPEC,EAAajH,EAAMkH,WAAa,wBAAIhH,MAAO,CAAC+E,SAAU,SACxCjF,EAAMkH,WAAW3F,KAAI,SAAAD,GAAG,OACpB,wBAAIpB,MAAO,CAAEwB,QAAS,QAAtB,UACQJ,EAAIsD,KADZ,cACsBtD,EAAIwE,MAD1B,aAIF,uDAGlBkB,EADDhH,EAAMK,SACI,kBAAC,EAAD,CAAMyF,MAAO9F,EAAM8F,QAEnBmB,EAIb,IAAM7B,EAASpF,EAAM+G,YAAc,UAAY,UAEzCI,EAAqB,CACvBzG,OAAQ,iCACRJ,OAAQ,QACRC,MAAO,QAEPH,MAAO,QACPgH,WAAY,QACZnC,SAAU,OACVoC,WAAY,OACZC,aAAc,OACdvC,aAAc,OACdQ,UAAW,SACXP,WAAY,eAEhB,OACI,6BAEI,yBAAK9E,MAAOiH,GACPnH,EAAM8F,OAGX,yBACI5F,MAAK,KACEiH,EADF,CAED7G,OAAQ,QACR8G,WAAY,aAJpB,SAQA,yBACQlH,MAAO,CACH+E,SAAU,OACVG,OAAQA,GAEZsB,QAAS1G,EAAM+G,YAAc,aAAW/G,EAAMuH,WAE7CT,EACAE,MCiFNQ,EArJO,WACpB,IAAMvD,EAAyBwD,aAAY,SAAC9C,GAAD,OAAgBA,EAAMxC,SAC3DC,EAAiCqF,aAAY,SAAC9C,GAAD,OAAgBA,EAAM+C,gBACnE5B,EAAgB2B,aAAY,SAAC9C,GAAD,OAAgBA,EAAMmB,SAClD6B,EAAwBF,aAAY,SAAC9C,GAAD,OAAgBA,EAAMgD,iBAC1DnF,EAAoBiF,aAAY,SAAC9C,GAAD,OAAgBA,EAAMnC,YACtDnC,EAAoBoH,aAAY,SAAC9C,GAAD,OAAgBA,EAAMtE,YACtD0G,EAAuBU,aAAY,SAAC9C,GAAD,OAAgBA,EAAMoC,eACzDG,EAAwBO,aAAY,SAAC9C,GAAD,OAAgBA,EAAMuC,cAE1DU,EAAWC,mBAECC,IAAfZ,IACD1C,QAAQC,IAAI,kBAEZsB,MAAM,cACLG,MAAK,SAAAC,GAAG,OAAIA,EAAI4B,UAEhB7B,MAAK,SAAAC,GAAG,OAAIyB,EAAS,CACpBrB,KAAM,aACNyB,OAAQ7B,QAKZ,IAAI8B,EAAS,YAAOhE,GAEdyD,EAA6B,IAAIxF,EAAa+B,EAAY7B,GAC1DD,EAAe,IAAI6B,EAAMC,GAGzBI,EAAqB7B,EAAWL,EAAMiC,cAAgB,GACtD8D,EAA6B,IAAIC,QAAQ9D,EAASX,QAAQ0E,UAEhE,GAAG/D,EAASX,OAAO,CACjB,IAAM2E,EAAoBvC,EAAQjC,KAAKyE,IAAI,EAAGjE,EAASX,QACnDS,EAAYuD,EAAaa,gBAAgBN,GAC7C9D,EAAYhC,EAAMoC,eAAeF,GACjCF,EAAYuD,EAAac,WAAWrE,GACpCsE,YAAW,WACTb,EAAS,CACPrB,KAAM,mBACNpE,MAAOgC,EACP2B,MAAOuC,MAER,KAGL,IAAMK,EAAa,WACb3B,IAECW,EAAarF,sBAChB4F,EAAYP,EAAaa,gBAAgBN,IAE3CA,EAAYP,EAAaiB,eAAeV,GACxCzD,QAAQC,IAAI,UAEZmD,EAAS,CACPrB,KAAM,SACNpE,MAAO8F,EACPW,qBAAsBlB,EAAapF,aACnCE,SAAUkF,EAAalF,SACvBmF,eAAe,EACf7B,MAAOA,EACPiB,aAAa,EACbG,WAAYA,MAId2B,SAASC,iBAAiB,WAE5B,SAASC,EAAQtD,GACX,CAAC,YAAa,aAAc,aAAahC,SAASgC,EAAExF,MAClDyH,EAAasB,KAAKvD,EAAExF,OAASiI,IAC/BW,SAASI,oBAAoB,UAAWF,GAiBpCrB,EAAa1E,gBAAgB0E,EAAapF,cAf5CoG,IAmBNd,EAAS,CACPrB,KAAM,eAdM,YAAVd,EAAExF,KACDyH,EAAawB,WAAahB,IAC3BW,SAASI,oBAAoB,UAAWF,GACxCL,QA+BN,OAJG3B,IAAgBY,GACjBwB,aANW,WACT,IAAIC,EAAQ,IAAIC,cAAc,UAAW,CAACpJ,IAAI,cAC9C4I,SAASS,cAAcF,KAIP,KAIlB,yBAAKlJ,MAAO,CACVM,QAAS,OACT+I,WAAY,OACZC,eAAgB,WAElB,yBAAKtJ,MAAO,CACRM,QAAS,OACTiJ,cAAe,SACfC,WAAY,SACZF,eAAgB,WAEhBvF,EAAW1C,KAAI,SAACD,EAAKJ,GAAN,OACb,kBAACyI,EAAD,CACE1J,IAAKiB,EACLI,IAAKA,EACLF,MAAOF,EACPO,OAAQ4C,EAASZ,SAASvC,GAC1Bb,SAAUA,QAIlB,kBAAC,EAAD,CACAyF,MAASA,EACTzF,SAAYA,EACZkH,UAzCF,WACE/C,QAAQC,IAAI,cACZmD,EAAS,CACPrB,KAAK,gBAuCPQ,YAAeA,EACfG,WAAcA,MC9IZ0C,EAAczB,QACW,cAA7B/B,OAAOC,SAASwD,UAEe,UAA7BzD,OAAOC,SAASwD,UAEhBzD,OAAOC,SAASwD,SAASC,MACvB,2DA8CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACT9D,MAAK,SAAAmE,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5F,QACfuF,UAAUC,cAAcO,YAI1BlG,QAAQC,IACN,iHAKEwF,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB7F,QAAQC,IAAI,sCAGRwF,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAAlH,GACLa,QAAQb,MAAM,4CAA6CA,M,WCrG3DmH,EAAe,CACjB3I,MCJ2B,CAC3B,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACrC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MDfrCuF,kBAAcI,EACdH,eAAe,EACf7B,MAAO,EACPzF,UAAU,EACV0G,aAAa,EACbG,gBAAYY,GAoCDiD,EAFDC,aA/BE,WAAmC,IAAlCrG,EAAiC,uDAAzBmG,EAAcG,EAAW,uCAE9C,OAAOA,EAAO1E,MACV,IAAK,SAAU,MAAO,CAClBpE,MAAO8I,EAAO9I,MACduF,aAAcuD,EAAOrC,qBACrBjB,eAAe,EACfnF,SAAUyI,EAAOzI,SACjBsD,MAAOmF,EAAOnF,MACdiB,aAAa,EACbG,WAAY+D,EAAO/D,YAGvB,IAAK,mBAKD,OAJYgE,OAAOC,OAAOxG,EACtB,CAACxC,MAAO8I,EAAO9I,OACf,CAACK,UAAU,GACX,CAACsD,MAAOmF,EAAOnF,QAEvB,IAAK,YAED,OADYoF,OAAOC,OAAOxG,EAAO,CAACtE,UAAU,IAEhD,IAAK,aAED,OADY6K,OAAOC,OAAOxG,EAAO,CAACoC,aAAa,IAEnD,IAAK,aACWmE,OAAOC,OAAOxG,EAAO,CAACuC,WAAY+D,EAAOjD,SACzD,QAAS,OAAOrD,MEhCxByG,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAGJlC,SAASyC,eAAe,SHcrB,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIqB,IACnBC,GACDpF,OAAOC,SAASC,MAEJmF,SAAWrF,OAAOC,SAASoF,OAIvC,OAGFrF,OAAO0C,iBAAiB,QAAQ,WAC9B,IAAMkB,EAAK,UAAMwB,GAAN,sBAEP5B,IAgEV,SAAiCI,EAAeC,GAE9ClE,MAAMiE,GACH9D,MAAK,SAAAwF,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAM9F,MAAK,SAAAmE,GACjCA,EAAa4B,aAAa/F,MAAK,WAC7BE,OAAOC,SAAS6F,eAKpBnC,EAAgBC,EAAOC,MAG1BY,OAAM,WACLrG,QAAQC,IACN,oEArFA0H,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAM9F,MAAK,WACjC1B,QAAQC,IACN,iHAMJsF,EAAgBC,EAAOC,OGtC/BE,K","file":"static/js/main.c70662ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/johnnyFever.dac54f72.ttf\";","import React, { CSSProperties } from 'react';\n\ntype blockProps = {\n    // columnId : number,\n    // rowId : number,\n    value: string,\n    key: string,\n    isInFullRow: boolean,\n    index: number,\n    gameOver: boolean\n}\n\nconst Block: React.FC<blockProps> = (props) => {\n    const { key, value } = props;\n\n    // const shine: CSSProperties = {\n    //     width: '5px',\n    //     height: '10px',\n    //     border: 'solid 3px',\n    //     borderColor: 'rgba(255, 255, 255, 0) transparent transparent transparent',\n    //     borderRadius: '70%',\n    //     transform: 'rotate(45deg)',\n    //     margin: '3px 8px'\n    // }\n    // const noShine: CSSProperties = {\n    //     width: '5px',\n    //     height: '10px',\n    //     border: 'solid 3px transparent',\n    //     borderRadius: '70%',\n    //     margin: '3px 8px',\n\n    // }\n\n    const getStyle = (value: string): CSSProperties => {\n\n        let color: string;\n        // let shadow: string = 'inset 2px -2px 0px 0px rgba(0,0,0,0.4)'\n        // let shadow: string = 'none';\n\n        if(props.gameOver) value = 'e';\n\n        switch (value) {\n            case 'e': color = '#111929'; break;\n            case 'b': color = 'deepSkyBlue'; break;\n            case 'o': color = 'orangered'; break;\n            case 'g': color = 'lime'; break;\n            case 'p': color = 'slateblue'; break;\n            case 'br': color = 'red'; break;\n            case 'y': color = 'gold'; break;\n            case 'r': color = 'deeppink'; break;\n            default: color = 'pink'; break;\n        }\n\n        // switch (value) {\n        //     case 'e': color = '#111929'; shadow = 'none'; break;\n        //     case 'b': color = '#2ba1d4'; break;\n        //     case 'o': color = '#fc8f4d'; break;\n        //     case 'g': color = '#deea70'; break;\n        //     case 'p': color = '#ea69d2'; break;\n        //     case 'br': color = '#f35669'; break;\n        //     case 'y': color = '#8672e1'; break;\n        //     case 'r': color = '#63a888'; break;\n        //     default: color = 'pink'; break;\n        // }\n\n        return {\n            height: '26px',\n            width: '26px',\n            display: 'inline-block',\n            margin: '0px 2px',\n            border: '1px solid rgba(255,255,255, .3)',\n            // border: '2px solid #202a34',\n            // border: '2px solid rgb(48,48,48)',\n            borderColor: value === 'e' ? 'rgba(255,255,255,.3)' : '#111929',\n            // borderRadius: '50%',\n            // borderRadius: '15px',\n            background: color,\n            position: 'relative',\n            opacity: '.9'\n        }\n    }\n\n    const style: CSSProperties = getStyle(value)\n\n    return <div\n        style={style}\n        key={key}\n        className={props.isInFullRow || props.gameOver ? `t${\"\" + props.index} animated` : \"\"}\n    >\n    </div>\n}\n\nexport default Block;","import UiBlock from './UiBlock'; \nimport React from 'react'; \n \ntype rowProps = {\n    rowId: number,\n    row: string[],\n    isFull: boolean,\n    key: number,\n    gameOver: boolean\n}\n \nconst Row: React.FC<rowProps> = (props: rowProps) => {\n\n    const rowId: number = props.rowId;\n    const blocks: JSX.Element[] = props.row.map((value, index) => \n        <UiBlock \n            key={\"\" + index + rowId}\n            value={value}\n            isInFullRow={props.isFull} \n            index={index}\n            gameOver={props.gameOver}\n        />\n    );\n\n    return <div \n        key={rowId}\n        style={{padding: 0}}\n        >{blocks}</div>\n}\n\nexport default Row;","// import React, { Component, CSSProperties } from 'react';\nimport { PiecePosition } from './Types';\n\ntype blockProps = {\n    columnId : number,\n    rowId : number,\n    value : string,\n}\n\nclass Block{  \n\n    value: string;\n    rowId: number;\n    columnId: number;\n\n    constructor(value: string, rowId: number, columnId: number){\n        this.columnId = columnId;\n        this.rowId = rowId;\n        this.value = value;\n    }\n\n    blockToLeft = (): Block => {\n        return new Block(this.value, this.rowId, this.columnId - 1);\n    }\n\n    blockToRight = (): Block => {\n        return new Block(this.value, this.rowId, this.columnId + 1);\n    }\n\n    blockBelow = (): Block => {\n        return new Block(this.value, this.rowId + 1, this.columnId);\n    }\n\n    isEqualTo = (block: Block): boolean => {\n        return block.rowId === this.rowId && block.columnId === this.columnId;\n    }\n}\n\nexport default Block;","import Block from './Block';\nimport { PiecePosition, BoardArray } from './Types'\n\nclass CurrentPiece {\n\n    currentPosition: PiecePosition;\n    lockCurrentPosition: boolean = false;\n    nextPosition: PiecePosition;\n    board: BoardArray;\n    axis: Block;\n    newPiece: boolean = false;\n\n    constructor(board: BoardArray, position: PiecePosition | undefined) {\n        this.board = board;\n\n        if(position){\n            this.currentPosition = position;\n            this.nextPosition = position;\n            this.axis = position[0];\n        } else {\n            const nextPiece: PiecePosition = this.generate();\n            this.currentPosition = nextPiece;\n            this.nextPosition = nextPiece;\n            this.axis = nextPiece[0];\n        }\n    }\n\n    removeFromBoard(board: BoardArray): BoardArray{\n        this.currentPosition.forEach((block: Block): void => {\n            board[block.rowId][block.columnId] = 'e';\n        })\n        return board;\n    }\n\n    addToBoard(board: BoardArray): BoardArray{\n        this.currentPosition.forEach((block: Block): void => {\n            board[block.rowId][block.columnId] = block.value;\n        })\n        return board;\n    }\n\n    addNextToBoard(board: BoardArray): BoardArray{\n        this.nextPosition.forEach((block: Block): void => {\n            board[block.rowId][block.columnId] = block.value\n        })\n        return board;\n    }\n\n    rotate(): boolean {\n\n        const newPosition: PiecePosition = this.currentPosition.map((block: Block, index) => {\n            const newColumnId = ((this.axis.rowId - block.rowId) * -1) + this.axis.columnId;\n            const newRowId = (this.axis.columnId - block.columnId) + this.axis.rowId;\n\n            return new Block(\n                block.value,\n                newRowId,\n                newColumnId\n            )\n        }) as PiecePosition\n\n        if (this.isValidPosition(newPosition)) {\n            this.setNextPosition(newPosition)\n            return true;\n        }\n        return false;\n    }\n\n    move(direction: string): boolean {\n        const proposedPosition = this.currentPosition.map((block: Block): Block => {\n            switch (direction) {\n                case \"ArrowLeft\":\n                    return block.blockToLeft();\n                case \"ArrowRight\":\n                    return block.blockToRight();\n                case \"ArrowDown\":\n                    return block.blockBelow();\n                default:\n                    return block;\n            }\n        }) as PiecePosition\n\n        if (this.isValidPosition(proposedPosition)) {\n            this.setNextPosition(proposedPosition)\n            return true;\n\n        } else if (direction === \"ArrowDown\") { //this.move(\"ArrowDown\") will always return true and alter state\n            this.setNextPosition(this.generate())\n            this.lockCurrentPosition = true;\n            return true;\n        }\n        return false;\n    }\n\n    isValidPosition(proposedPosition: PiecePosition): boolean {\n        const currentPositionString: string[] = this.currentPosition.map((block: Block) => {\n            return JSON.stringify(block);\n        })\n        // i.e., the proposed position with the blocks it has in common with the current position having been subtracted\n        const difference: Block[] = proposedPosition.filter((block: Block) => {\n            return !currentPositionString.includes(JSON.stringify(block));\n        })\n\n        for (let block of difference) {\n            if (block.rowId === this.board.length){\n                return false;}\n            try {\n                if (this.board[block.rowId][block.columnId] !== 'e'){\n                    return false;\n                }\n            } catch (error) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private setNextPosition(nextPosition: PiecePosition) {\n        this.nextPosition = nextPosition;\n    }\n\n    getNextPosition = (): PiecePosition => {\n        return this.nextPosition;\n    }\n\n    generate(): PiecePosition {\n        let blocks: PiecePosition;\n        const shapes = ['o', 't', 's', 'z', 'l', 'j', 'i']\n        const shape = shapes[Math.floor(Math.random() * shapes.length)]\n        switch (shape) {\n            case 'o':\n                blocks = [\n                    new Block('b', 0, 4),\n                    new Block('b', 0, 5),\n                    new Block('b', 1, 4),\n                    new Block('b', 1, 5)\n                ];\n                break;\n            case 't':\n                blocks = [\n                    new Block('o', 1, 5),\n                    new Block('o', 0, 5),\n                    new Block('o', 1, 4),\n                    new Block('o', 1, 6)\n                ]\n                break;\n            case 's':\n                blocks = [\n                    new Block('g', 0, 4),\n                    new Block('g', 1, 3),\n                    new Block('g', 0, 5),\n                    new Block('g', 1, 4)\n                ]\n                break;\n            case 'z':\n                blocks = [\n                    new Block('p', 1, 5),\n                    new Block('p', 0, 4),\n                    new Block('p', 0, 5),\n                    new Block('p', 1, 6)\n                ]\n                break;\n            case 'l':\n                blocks = [\n                    new Block('y', 0, 4),\n                    new Block('y', 0, 3),\n                    new Block('y', 0, 5),\n                    new Block('y', 1, 3)\n                ]\n                break;\n            case 'j':\n                blocks = [\n                    new Block('br', 0, 4),\n                    new Block('br', 0, 5),\n                    new Block('br', 0, 3),\n                    new Block('br', 1, 5)\n                ]\n                break;\n            case 'i':\n                blocks = [\n                    new Block('r', 0, 5),\n                    new Block('r', 0, 4),\n                    new Block('r', 0, 3),\n                    new Block('r', 0, 6)\n                ]\n                break;\n            default: blocks = [\n                new Block('b', 0, 4),\n                new Block('b', 0, 5),\n                new Block('b', 1, 4),\n                new Block('b', 1, 5)\n            ];\n        }\n        this.newPiece = true;\n        return blocks;\n    }\n\n}\n\nexport default CurrentPiece;","import Block from './Block';\n\nclass Row{\n\n    rowId: number;\n    blocks: Block[];\n    isFull: boolean;\n    \n    constructor(rowId: number, blocks: string[]){\n        this.rowId = rowId;\n        this.blocks = blocks.map((value, index) => {\n            return new Block(value, rowId, index)\n        })\n        this.isFull = !blocks.includes('e');\n    }\n}\n\nexport default Row;","import Row from './Row'\n\nclass Board{\n    private rows: Row[];\n    private boardArray: string[][]; \n    private nextBoard: string[][];\n\n    constructor(boardArray: string[][]){\n        this.boardArray = boardArray;\n        this.nextBoard = boardArray;\n        this.rows = boardArray.map((row: string[], index: number) => {\n            return new Row(index, row);\n        })\n    }\n\n    getFullRows = (): number[] => {\n        let fullRows: number[] = [];\n        this.rows.forEach((row: Row, index: number) => {\n            if (row.isFull) fullRows.push(index)\n        })\n        return fullRows;\n    }\n\n    removeFullRows = (fullRows: number[]): string[][] => {\n        //remove current piece\n\n        //add current piece\n\n        console.log('remove full rows')\n        fullRows.forEach((index: number) => {\n            while(index >= 0){\n                    if(this.nextBoard[index - 1]){\n                        this.nextBoard[index] = this.nextBoard[index - 1]\n                    } else {\n                        this.nextBoard[index] = ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e']\n                    }\n                    index--;\n            }\n        })\n        return this.nextBoard;\n    }\n    \n}\n\nexport default Board;","import React, { CSSProperties } from 'react';\n\ntype formProps = {\n    score: number\n}\n\nclass Form extends React.Component<formProps>{\n    state =  {\n        name: \"\"\n    }\n    commonStyle: CSSProperties = {\n        display: 'block',\n        backgroundColor: 'transparent',\n        color: 'white',\n        border: '3px solid white',\n        borderRadius: '10px',\n        fontFamily: 'johnnyFever',\n        margin: 'auto',\n        fontSize: '26px',\n        maxWidth: '80%'\n\n    }\n\n    buttonStyle: CSSProperties = {\n        ...this.commonStyle,\n        cursor: 'pointer',\n        marginTop: '26px'\n    }\n\n    inputStyle: CSSProperties = {\n        ...this.commonStyle,\n        textAlign: 'center',\n    }\n\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n    submit = (): void => {\n        if(this.state.name.length === 3){\n            const body = JSON.stringify({name: this.state.name, score: this.props.score});\n            fetch('/insertOne', {\n                method: \"POST\",\n                redirect: \"follow\",\n                body: body\n            })\n            .then(res => window.location.href = '/allScores');\n        }\n    }\n\n    render(){\n        return <div>\n            <p>enter your name</p>\n            <input \n                style = {this.inputStyle}\n                type=\"text\" \n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\n                value={this.state.name}\n                maxLength={3}/>\n            <button \n                onClick = {this.submit}\n                style = {this.buttonStyle}\n            >\n                submit\n            </button>\n        </div>\n    }\n}\n\nexport default Form;","import React, { CSSProperties } from 'react';\nimport Form from './Form';\nimport '../johnny_fever/johnnyFever.ttf';\nimport { ScoreList } from '../Types';\n\ntype ScoreProps = {\n    score: number,\n    gameOver: boolean,\n    startGame: () => void,\n    gameStarted: boolean,\n    highScores: ScoreList | undefined\n}\n\nconst Score: React.FC<ScoreProps> = (props) => {\n\n\n    let variableText;\n    if (!props.gameStarted) {\n        variableText = \"click here to play!\"\n    } else if (props.gameOver) {\n        variableText = \"game over\"\n    } else {\n        variableText = \"use the arrow keys to play\"\n    }\n\n    const scoreBoard = props.highScores ? <ol style={{fontSize: '20px'}}>{\n                        props.highScores.map(row =>\n                            <li style={{ padding: '0px' }}>\n                                {`${row.name} : ${row.score} PTS`}\n                            </li>)}\n                        </ol>\n                        : <div>Loading high scores...</div>\n    let bottom;\n    if(props.gameOver){\n        bottom = <Form score={props.score}/>\n    } else {\n        bottom = scoreBoard\n    }\n\n\n    const cursor = props.gameStarted ? 'initial' : 'pointer'\n\n    const box: CSSProperties = {\n        border: \"3px solid rgba(255,255,255,.3)\",\n        height: \"150px\",\n        width: \"250px\",\n        // color: `rgb(255, ${255-props.score}, ${255-props.score})`,\n        color: \"white\",\n        lineHeight: \"150px\",\n        fontSize: \"75px\",\n        marginLeft: \"25px\",\n        marginBottom: \"10px\",\n        borderRadius: \"15px\",\n        textAlign: \"center\",\n        fontFamily: \"johnnyFever\"\n    }\n    return (\n        <div>\n\n            <div style={box}>\n                {props.score}\n            </div>\n\n            <div\n                style={{ \n                    ...box,\n                    height: '435px',\n                    lineHeight: 'initial'\n                }}\n            >\n                Tetris\n            <div\n                    style={{\n                        fontSize: '30px',\n                        cursor: cursor\n                    }}\n                    onClick={props.gameStarted ? () => {} : props.startGame}\n                >\n                    {variableText}\n                    {bottom}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Score;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport UiRow from './UI/UiRow';\nimport Row from './Row';\nimport Block from './Block';\nimport CurrentPiece from './CurrentPiece';\nimport { PiecePosition, BoardArray, ScoreList } from './Types';\nimport Board from './Board';\nimport Score from './UI/Score';\n\n\nconst App: React.FC = () => {\n  const boardArray: string[][] = useSelector((state: any) => state.board);\n  const currentPosition: PiecePosition = useSelector((state: any) => state.currentPiece);\n  const score: number = useSelector((state: any) => state.score);\n  const gravityActive: number = useSelector((state: any) => state.gravityActive)\n  const newPiece: boolean = useSelector((state: any) => state.newPiece)\n  const gameOver: boolean = useSelector((state: any) => state.gameOver)\n  const gameStarted: boolean = useSelector((state: any) => state.gameStarted)\n  const highScores: ScoreList = useSelector((state: any) => state.highScores)\n\n  const dispatch = useDispatch();\n\n  if(highScores === undefined){\n    console.log(\"---FETCHING---\")\n    // fetch('http://localhost:4567/getTopTen')\n    fetch('/getTopTen')\n    .then(res => res.json())\n    // .then(res => JSON.parse(res))\n    .then(res => dispatch({\n      type: \"SET_SCORES\",\n      scores: res\n    }))\n  }\n \n\n  let boardCopy = [...boardArray];\n\n  const currentPiece: CurrentPiece = new CurrentPiece(boardArray, currentPosition);\n  const board: Board = new Board(boardArray)\n  \n\n  const fullRows: number[] = newPiece ? board.getFullRows() : [];\n  const pauseForAnimation: boolean = new Boolean(fullRows.length).valueOf();\n  \n  if(fullRows.length){\n    const nextScore: number = score + Math.pow(2, fullRows.length);\n    let nextBoard = currentPiece.removeFromBoard(boardCopy);\n    nextBoard = board.removeFullRows(fullRows);\n    nextBoard = currentPiece.addToBoard(nextBoard);\n    setTimeout(()=>{\n      dispatch({\n        type: \"REMOVE_FULL_ROWS\",\n        board: nextBoard,\n        score: nextScore\n      })\n    }, 400)\n  }\n\n  const trackPiece = (): void => {\n    if(!gameStarted) return;\n\n    if (!currentPiece.lockCurrentPosition) {\n      boardCopy = currentPiece.removeFromBoard(boardCopy);\n    }\n    boardCopy = currentPiece.addNextToBoard(boardCopy);\n    console.log('UPDATE')\n    \n    dispatch({ \n      type: 'UPDATE',\n      board: boardCopy,\n      currentPiecePosition: currentPiece.nextPosition,\n      newPiece: currentPiece.newPiece,\n      gravityActive: true,\n      score: score,\n      gameStarted: true,\n      highScores: highScores\n    })\n  }\n\n    document.addEventListener('keydown', handler)\n\n  function handler(e: KeyboardEvent) {\n    if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowDown\"].includes(e.key)) {\n      if (currentPiece.move(e.key) && !pauseForAnimation) {\n        document.removeEventListener('keydown', handler)\n        if (!gameIsOver()){\n          trackPiece()\n        } else {\n          endGame()\n        }\n      }\n    }\n    if (e.key === \"ArrowUp\") {\n      if(currentPiece.rotate() && !pauseForAnimation){\n        document.removeEventListener('keydown', handler)\n        trackPiece();\n      }\n    }\n  }\n\n  function gameIsOver(): boolean{\n    return !currentPiece.isValidPosition(currentPiece.nextPosition);\n  }\n\n  function endGame(): void{\n    dispatch({\n      type: \"GAME_OVER\"\n    })\n  }\n\n  function startGame(): void{\n    console.log('start game');\n    dispatch({\n      type:\"START_GAME\"\n    })\n  }\n\n  const fall = (): void => {\n      let event = new KeyboardEvent('keydown', {key:\"ArrowDown\"})\n      document.dispatchEvent(event);\n  }\n\n  if(gameStarted && !gravityActive){\n    setInterval(fall, 500)\n  } \n  \n  return (\n    <div style={{\n      display: 'flex',\n      paddingTop: '30px',\n      justifyContent: 'center'\n    }}>\n    <div style={{ \n        display: 'flex',\n        flexDirection: 'column', \n        alignItems: 'center',\n        justifyContent: 'center' }}>\n      {\n        boardArray.map((row, index) => \n          <UiRow \n            key={index} \n            row={row} \n            rowId={index} \n            isFull={fullRows.includes(index)}\n            gameOver={gameOver}\n            />)\n      }\n    </div>\n    <Score\n    score = {score}\n    gameOver = {gameOver}\n    startGame = {startGame}\n    gameStarted = {gameStarted}\n    highScores = {highScores}\n  />\n  </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from 'redux';\nimport emptyBoard from './emptyBoard';\n\nconst initialState = {\n    board: emptyBoard,\n    currentPiece: undefined,\n    gravityActive: false,\n    score: 0,\n    gameOver: false,\n    gameStarted: false,\n    highScores: undefined\n};\n\nconst reducer = (state = initialState, action) => {\n    let nextState;\n    switch(action.type){\n        case 'UPDATE': return {\n            board: action.board,\n            currentPiece: action.currentPiecePosition,\n            gravityActive: true,\n            newPiece: action.newPiece,\n            score: action.score,\n            gameStarted: true,\n            highScores: action.highScores\n            \n        }\n        case \"REMOVE_FULL_ROWS\": \n            nextState = Object.assign(state, \n                {board: action.board},\n                {newPiece: false},\n                {score: action.score})\n            return nextState;\n        case \"GAME_OVER\":\n            nextState = Object.assign(state, {gameOver: true})\n            return nextState;\n        case \"START_GAME\":\n            nextState = Object.assign(state, {gameStarted: true})\n            return nextState;\n        case \"SET_SCORES\":\n            nextState = Object.assign(state, {highScores: action.scores})\n        default: return state;\n    }\n}\n\nconst store = createStore(reducer);\n\nexport default store;\n ","const emptyBoard: String[][] = [\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e'],\n    ['e','e','e','e','e','e','e','e','e','e']\n]\n\nexport default emptyBoard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    \n    document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n\n"],"sourceRoot":""}